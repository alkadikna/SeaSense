[Config LoRaNetworkTest]
network = flora.simulations.LoRaNetworkTest
**.maxTransmissionDuration = 4s
**.energyDetection = -110dBm

#cmdenv-autoflush = true
#cmdenv-status-frequency = 10000000s
#cmdenv-express-mode = false
#cmdenv-output-file = cmd_env_log.txt
**.vector-recording = true

rng-class = "cMersenneTwister"
**.loRaGW[*].numUdpApps = 1
**.loRaGW[0].packetForwarder.localPort = 2000
**.loRaGW[0].packetForwarder.destPort = 1000
**.loRaGW[0].packetForwarder.destAddresses = "networkServer"
**.loRaGW[0].packetForwarder.indexNumber = 0

**.networkServer.numApps = 1
**.networkServer.**.evaluateADRinServer = true
**.networkServer.app[0].typename = "NetworkServerApp"
**.networkServer.app[0].destAddresses = "loRaGW[0]"
**.networkServer.app[0].destPort = 2000
**.networkServer.app[0].localPort = 1000
**.networkServer.app[0].adrMethod = ${"avg"}

**.numberOfPacketsToSend = 0 #${numberOfPAckets = 200..5000 step 200} #100 #obviously 0 means infinite number of packets
sim-time-limit = 1d
#simtime-resolution = -11
repeat = 30

**.timeToFirstPacket = exponential(1000s)
**.timeToNextPacket = exponential(1000s)
**.alohaChannelModel = false

#nodes features
**.numberOfNodes = 1
**.constraintAreaMaxX = 1000m
**.constraintAreaMaxY = 1000m

**.loRaNodes[0].**.initialX = 300m
**.loRaNodes[0].**.initialY = 350m
**.loRaNodes[*].**initialLoRaSF = 12
**.loRaNodes[*].**initialLoRaTP = 14dBm
**.loRaNodes[*].**initialLoRaBW = 125 kHz
**.loRaNodes[*].**initialLoRaCR = 4
**.loRaNodes[*].**.initFromDisplayString = false
**.loRaNodes[*].**.evaluateADRinNode = true
**.loRaNodes[*].numApps = 1
**.loRaNodes[*].app[0].typename = "SimpleLoRaApp"

#gateway features
**.numberOfGateways = 1
**.loRaGW[0].**.initialX = 200.00m
**.loRaGW[0].**.initialY = 200.00m
**.LoRaGWNic.radio.iAmGateway = true
**.loRaGW[*].**.initFromDisplayString = false

#power consumption features
**.loRaNodes[*].LoRaNic.radio.energyConsumer.typename = "LoRaEnergyConsumer"
**.loRaNodes[*].**.energySourceModule = "^.IdealEpEnergyStorage"
**.loRaNodes[*].LoRaNic.radio.energyConsumer.configFile = xmldoc("energyConsumptionParameters.xml")

#general features
**.sigma = 3.57
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxZ = 0m

LoRaNetworkTest.**.radio.separateTransmissionParts = false
LoRaNetworkTest.**.radio.separateReceptionParts = false


**.ipv4Delayer.config = xmldoc("cloudDelays.xml")
**.radio.radioMediumModule = "LoRaMedium"
**.LoRaMedium.pathLossType = "LoRaLogNormalShadowing"
**.minInterferenceTime = 0s
**.displayAddresses = false

# cache features
**.LoRaMedium.mediumLimitCacheType = "LoRaMediumCache"
**.LoRaMedium.rangeFilter = "communicationRange"
**.LoRaMedium.neighborCacheType = "LoRaNeighborCache"
**.LoRaMedium.neighborCache.range = 546m
**.LoRaMedium.neighborCache.refillPeriod = 3000s


#############################################################################################################
[Config SeaSense]
network = SeaSense
sim-time-limit = 1d
**.maxTransmissionDuration = 10s

# RNG setup
rng-class = "cMersenneTwister"

# Gateway setup
**.numberOfGateways = 1
**.loRaGW[0].**.initialX = 5000m  # Gateway di pesisir (titik awal)
**.loRaGW[0].**.initialY = 313m  # Gateway di pesisir
**.LoRaGWNic.radio.iAmGateway = true
**.loRaGW[*].**.initFromDisplayString = false
**.loRaGW[*].numUdpApps = 1
**.loRaGW[0].packetForwarder.localPort = 2000
**.loRaGW[0].packetForwarder.destPort = 1000
**.loRaGW[0].packetForwarder.destAddresses = "networkServer"
**.loRaGW[0].packetForwarder.indexNumber = 0

# Network server setup
**.networkServer.numApps = 1
**.networkServer.**.evaluateADRinServer = true
**.networkServer.app[0].typename = "NetworkServerApp"
**.networkServer.app[0].destAddresses = "loRaGW[0]"
**.networkServer.app[0].destPort = 2000
**.networkServer.app[0].localPort = 1000
**.networkServer.app[0].adrMethod = ${"avg"}

# Node setup
**.numberOfNodes = 5  # Jumlah node
**.loRaNodes[*].typename = "LoRaNode"
**.loRaNodes[*].**.energySourceModule = "^.IdealEpEnergyStorage"
**.loRaNodes[*].LoRaNic.radio.energyConsumer.typename = "LoRaEnergyConsumer"
**.loRaNodes[*].LoRaNic.radio.energyConsumer.configFile = xmldoc("energyConsumptionParameters.xml")
**.loRaNodes[*].**.initFromDisplayString = false
**.loRaNodes[*].**.evaluateADRinNode = true
**.loRaNodes[*].numApps = 1
**.loRaNodes[*].app[0].typename = "SimpleLoRaApp"
**.loRaNodes[*].app[0].destAddresses = "loRaGW[0]"


# Node position setup
**.loRaNodes[0].**.initialX = 5000m
**.loRaNodes[0].**.initialY = 2313m
**.loRaNodes[1].**.initialX = 4900m
**.loRaNodes[1].**.initialY = 2267m  
**.loRaNodes[2].**.initialX = 4800m
**.loRaNodes[2].**.initialY = 2221m  
**.loRaNodes[3].**.initialX = 5100m
**.loRaNodes[3].**.initialY = 2267m  
**.loRaNodes[4].**.initialX = 5200m
**.loRaNodes[4].**.initialY = 2221m  

# General simulation settings
**.vector-recording = true
**.scalar-recording = true
**.alohaChannelModel = false

# LoRa medium and path loss
**.radio.radioMediumModule = "LoRaMedium"
**.LoRaMedium.mediumLimitCacheType = "LoRaMediumCache"
**.LoRaMedium.rangeFilter = "communicationRange"
**.LoRaMedium.neighborCacheType = "LoRaNeighborCache"
**.LoRaMedium.neighborCache.range = 546m
**.LoRaMedium.neighborCache.refillPeriod = 3000s

# Application traffic
**.timeToFirstPacket = exponential(1000s)
**.timeToNextPacket = exponential(1000s)
**.numberOfPacketsToSend = 0  # 0 berarti jumlah paket tak terbatas

# Display settings
**.displayAddresses = false

# IPv4 configuration
**.ipv4Delayer.config = xmldoc("cloudDelays.xml")
**.configurator.assignDisjunctSubnetAddresses = false

# Simulation repeat settings
repeat = 30